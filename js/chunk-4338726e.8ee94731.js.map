{"version":3,"sources":["webpack:///./node_modules/eth-sig-util/index.js","webpack:///./node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1-lib/index.js","webpack:///./node_modules/jsonify/lib/parse.js","webpack:///./node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1-lib/der.js","webpack:///./node_modules/jsonify/index.js","webpack:///./node_modules/ethereumjs-abi/index.js","webpack:///./node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1-adapter.js","webpack:///./node_modules/semaphore/lib/semaphore.js","webpack:///./node_modules/json-stable-stringify/index.js","webpack:///./node_modules/ethereumjs-abi/node_modules/bn.js/lib/bn.js","webpack:///./node_modules/jsonify/lib/stringify.js","webpack:///./node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/index.js","webpack:///./node_modules/ethereumjs-abi/lib/index.js","webpack:///./node_modules/eth-sig-util/node_modules/bn.js/lib/bn.js"],"names":["ethUtil","ethAbi","typedSignatureHash","typedData","error","Error","length","data","map","e","type","toBuffer","value","types","schema","name","soliditySHA3","Array","fill","recoverPublicKey","hash","sig","signature","sigParams","fromRpcSig","ecrecover","v","r","s","getPublicKeyFor","msgParams","message","msgHash","hashPersonalMessage","padWithZeroes","number","myString","module","exports","concatSig","rSig","fromSigned","sSig","vSig","bufferToInt","rStr","toUnsigned","toString","sStr","vStr","stripHexPrefix","intToHex","addHexPrefix","concat","normalize","input","buffer","bufferToHex","msg","toLowerCase","personalSign","privateKey","ecsign","serialized","this","recoverPersonalSignature","publicKey","sender","publicToAddress","senderHex","extractPublicKey","hashBuffer","signTypedData","recoverTypedSignature","BN","EC","ec","ecparams","curve","privateKeyExport","compressed","d","ucmp","n","point","g","mul","toPublicKey","getX","getY","privateKeyModInverse","bn","isZero","invm","toArrayLike","Buffer","signatureImport","sigObj","ecdhUnsafe","keyFromPublic","scalar","shared","pub","x","y","alloc","isOdd","copy","at","ch","text","escapee","b","f","t","m","next","c","charAt","string","isFinite","hex","i","uffff","parseInt","String","fromCharCode","white","word","array","push","object","key","Object","hasOwnProperty","call","source","reviver","result","walk","holder","k","prototype","undefined","EC_PRIVKEY_EXPORT_DER_COMPRESSED","from","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","privateKeyImport","index","lenb","len","slice","signatureImportLax","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","parse","stringify","secp256k1","secp256k1v3","der","privateKeyVerify","Uint8Array","RangeError","privateKeyNegate","privateKeyTweakAdd","tweak","privateKeyTweakMul","publicKeyCreate","publicKeyConvert","publicKeyVerify","publicKeyTweakAdd","publicKeyTweakMul","publicKeyCombine","publicKeys","keys","forEach","signatureNormalize","signatureExport","sign","options","TypeError","signOptions","noncefn","algo","attempt","bufferAlgo","bufferData","ecdsaSign","recovery","recid","verify","ecdsaVerify","recover","ecdsaRecover","ecdh","global","nextTick","fn","setTimeout","semaphore","capacity","current","queue","firstHere","take","isFirst","item","arguments","task","leave","shift","available","process","json","JSON","obj","opts","cmp","space","join","cycles","replacer","node","a","aobj","bobj","seen","parent","level","indent","colonSeparator","toJSON","isArray","out","indexOf","objectKeys","sort","keyValue","splice","has","assert","val","inherits","ctor","superCtor","super_","TempCtor","constructor","base","endian","isBN","negative","words","red","_init","wordSize","window","parseHex4Bits","charCodeAt","parseHexByte","lowerBound","parseBase","str","start","end","Math","min","num","max","left","right","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","strip","parseLength","limbLen","limbPow","total","mod","imuln","_iaddn","pow","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","toBitArray","bitLength","bit","wbit","smallMulTo","self","lo","carry","ncarry","rword","maxJ","padding","groupSize","groupBase","modn","idivn","toNumber","ret","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","isEven","yp","xp","im","jm","gcd","_invmp","x1","x2","delta","cmpn","bincn","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","split","imulK","_strip","output","outLen","prev","mod3","one","nOne","lpow","z","inv","windowSize","wnd","currentLen","mont","u","gap","rep","escapable","meta","quote","lastIndex","test","partial","mind","apply","_typeof","Symbol","iterator","_require","keccak224","keccak384","keccak256","keccak512","rlp","createHash","assign","MAX_INTEGER","TWO_POW256","KECCAK256_NULL_S","SHA3_NULL_S","KECCAK256_NULL","SHA3_NULL","KECCAK256_RLP_ARRAY_S","SHA3_RLP_ARRAY_S","KECCAK256_RLP_ARRAY","SHA3_RLP_ARRAY","KECCAK256_RLP_S","SHA3_RLP_S","KECCAK256_RLP","SHA3_RLP","bytes","allocUnsafe","zeroAddress","addressLength","setLengthLeft","setLength","buf","setLengthRight","unpad","stripZeros","first","isBuffer","isHexString","padToEven","intToBuffer","keccak","sha3","sha256","update","digest","ripemd160","padded","rlphash","encode","isValidPrivate","isValidPublic","sanitize","pubToAddress","pubKey","privateToPublic","importPublic","prefix","senderPubKey","toRpcSig","privateToAddress","isValidAddress","address","isZeroAddress","toChecksumAddress","toUpperCase","isValidChecksumAddress","generateAddress","nonce","isPrecompiled","isHexPrefixed","isValidSignature","homestead","SECP256K1_N_DIV_2","SECP256K1_N","baToJSON","ba","defineProperties","fields","raw","_fields","label","field","serialize","getter","setter","allowZero","allowLess","defineProperty","enumerable","configurable","get","set","default","alias","decode","utils","ABI","elementaryName","startsWith","parseTypeN","exec","parseTypeNxM","parseTypeArray","match","parseNumber","arg","parseSignature","args","method","retargs","params","encodeSingle","lastIndexOf","unshift","decodeSingle","parsedType","offset","parseType","rawType","decoded","subArray","memoryUsage","isDynamic","isNumeric","eventID","methodID","rawEncode","values","headLength","cur","rawDecode","parsed","simpleEncode","simpleDecode","solidityHexValue","bitsize","subType","arraySize","arrayValues","bytesize","solidityPack","soliditySHA256","solidityRIPEMD160","fromSerpent","toSerpent"],"mappings":"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","file":"js/chunk-4338726e.8ee94731.js","sourcesContent":["const ethUtil = require('ethereumjs-util')\nconst ethAbi = require('ethereumjs-abi')\n\nmodule.exports = {\n\n  concatSig: function (v, r, s) {\n    const rSig = ethUtil.fromSigned(r)\n    const sSig = ethUtil.fromSigned(s)\n    const vSig = ethUtil.bufferToInt(v)\n    const rStr = padWithZeroes(ethUtil.toUnsigned(rSig).toString('hex'), 64)\n    const sStr = padWithZeroes(ethUtil.toUnsigned(sSig).toString('hex'), 64)\n    const vStr = ethUtil.stripHexPrefix(ethUtil.intToHex(vSig))\n    return ethUtil.addHexPrefix(rStr.concat(sStr, vStr)).toString('hex')\n  },\n\n  normalize: function (input) {\n    if (!input) return\n\n    if (typeof input === 'number') {\n      const buffer = ethUtil.toBuffer(input)\n      input = ethUtil.bufferToHex(buffer)\n    }\n\n    if (typeof input !== 'string') {\n      var msg = 'eth-sig-util.normalize() requires hex string or integer input.'\n      msg += ' received ' + (typeof input) + ': ' + input\n      throw new Error(msg)\n    }\n\n    return ethUtil.addHexPrefix(input.toLowerCase())\n  },\n\n  personalSign: function (privateKey, msgParams) {\n    var message = ethUtil.toBuffer(msgParams.data)\n    var msgHash = ethUtil.hashPersonalMessage(message)\n    var sig = ethUtil.ecsign(msgHash, privateKey)\n    var serialized = ethUtil.bufferToHex(this.concatSig(sig.v, sig.r, sig.s))\n    return serialized\n  },\n\n  recoverPersonalSignature: function (msgParams) {\n    const publicKey = getPublicKeyFor(msgParams)\n    const sender = ethUtil.publicToAddress(publicKey)\n    const senderHex = ethUtil.bufferToHex(sender)\n    return senderHex\n  },\n\n  extractPublicKey: function (msgParams) {\n    const publicKey = getPublicKeyFor(msgParams)\n    return '0x' + publicKey.toString('hex')\n  },\n\n  typedSignatureHash: function (typedData) {\n    const hashBuffer = typedSignatureHash(typedData)\n    return ethUtil.bufferToHex(hashBuffer)\n  },\n\n  signTypedData: function (privateKey, msgParams) {\n    const msgHash = typedSignatureHash(msgParams.data)\n    const sig = ethUtil.ecsign(msgHash, privateKey)\n    return ethUtil.bufferToHex(this.concatSig(sig.v, sig.r, sig.s))\n  },\n\n  recoverTypedSignature: function (msgParams) {\n    const msgHash = typedSignatureHash(msgParams.data)\n    const publicKey = recoverPublicKey(msgHash, msgParams.sig)\n    const sender = ethUtil.publicToAddress(publicKey)\n    return ethUtil.bufferToHex(sender)\n  }\n\n}\n\n/**\n * @param typedData - Array of data along with types, as per EIP712.\n * @returns Buffer\n */\nfunction typedSignatureHash(typedData) {\n  const error = new Error('Expect argument to be non-empty array')\n  if (typeof typedData !== 'object' || !typedData.length) throw error\n\n  const data = typedData.map(function (e) {\n    return e.type === 'bytes' ? ethUtil.toBuffer(e.value) : e.value\n  })\n  const types = typedData.map(function (e) { return e.type })\n  const schema = typedData.map(function (e) {\n    if (!e.name) throw error\n    return e.type + ' ' + e.name\n  })\n\n  return ethAbi.soliditySHA3(\n    ['bytes32', 'bytes32'],\n    [\n      ethAbi.soliditySHA3(new Array(typedData.length).fill('string'), schema),\n      ethAbi.soliditySHA3(types, data)\n    ]\n  )\n}\n\nfunction recoverPublicKey(hash, sig) {\n  const signature = ethUtil.toBuffer(sig)\n  const sigParams = ethUtil.fromRpcSig(signature)\n  return ethUtil.ecrecover(hash, sigParams.v, sigParams.r, sigParams.s)\n}\n\nfunction getPublicKeyFor (msgParams) {\n  const message = ethUtil.toBuffer(msgParams.data)\n  const msgHash = ethUtil.hashPersonalMessage(message)\n  return recoverPublicKey(msgHash, msgParams.sig)\n}\n\n\nfunction padWithZeroes (number, length) {\n  var myString = '' + number\n  while (myString.length < length) {\n    myString = '0' + myString\n  }\n  return myString\n}\n","'use strict';\n\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nvar BN = require('bn.js');\nvar EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = new BN(privateKey);\n  if (d.ucmp(ecparams.n) >= 0) {\n    throw new Error('couldn\\'t export to DER format');\n  }\n\n  var point = ec.g.mul(d);\n  return toPublicKey(point.getX(), point.getY(), compressed);\n};\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey);\n  if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {\n    throw new Error('private key range is invalid');\n  }\n\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r);\n  if (r.ucmp(ecparams.n) >= 0) {\n    r = new BN(0);\n  }\n\n  var s = new BN(sigObj.s);\n  if (s.ucmp(ecparams.n) >= 0) {\n    s = new BN(0);\n  }\n\n  return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var point = ec.keyFromPublic(publicKey);\n\n  var scalar = new BN(privateKey);\n  if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {\n    throw new Error('scalar was invalid (zero or overflow)');\n  }\n\n  var shared = point.pub.mul(scalar);\n  return toPublicKey(shared.getX(), shared.getY(), compressed);\n};\n\nvar toPublicKey = function toPublicKey(x, y, compressed) {\n  var publicKey = void 0;\n\n  if (compressed) {\n    publicKey = Buffer.alloc(33);\n    publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n  } else {\n    publicKey = Buffer.alloc(65);\n    publicKey[0] = 0x04;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n    y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);\n  }\n\n  return publicKey;\n};","var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n","\"use strict\";\n\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n// begin\n0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20,\n// private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n// middle\n0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x21, 0x02, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00,\n// public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n// begin\n0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20,\n// private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n// middle\n0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x41, 0x04, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0e, 0x11, 0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10, 0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00,\n// public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n  privateKey.copy(result, compressed ? 8 : 9);\n  publicKey.copy(result, compressed ? 181 : 214);\n  return result;\n};\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length;\n\n  // sequence header\n  var index = 0;\n  if (length < index + 1 || privateKey[index] !== 0x30) return null;\n  index += 1;\n\n  // sequence length constructor\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return null;\n\n  var lenb = privateKey[index] & 0x7f;\n  index += 1;\n  if (lenb < 1 || lenb > 2) return null;\n  if (length < index + lenb) return null;\n\n  // sequence length\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n  index += lenb;\n  if (length < index + len) return null;\n\n  // sequence element 0: version number (=1)\n  if (length < index + 3 || privateKey[index] !== 0x02 || privateKey[index + 1] !== 0x01 || privateKey[index + 2] !== 0x01) {\n    return null;\n  }\n  index += 3;\n\n  // sequence element 1: octet string, up to 32 bytes\n  if (length < index + 2 || privateKey[index] !== 0x04 || privateKey[index + 1] > 0x20 || length < index + 2 + privateKey[index + 1]) {\n    return null;\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\n\nexports.signatureImportLax = function (signature) {\n  var r = Buffer.alloc(32, 0);\n  var s = Buffer.alloc(32, 0);\n\n  var length = signature.length;\n  var index = 0;\n\n  // sequence tag byte\n  if (signature[index++] !== 0x30) {\n    return null;\n  }\n\n  // sequence length byte\n  var lenbyte = signature[index++];\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80;\n    if (index > length) {\n      return null;\n    }\n  }\n\n  // sequence tag byte for r\n  if (signature[index++] !== 0x02) {\n    return null;\n  }\n\n  // length for r\n  var rlen = signature[index++];\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80;\n    if (index + lenbyte > length) {\n      return null;\n    }\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {}\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      rlen = (rlen << 8) + signature[index];\n    }\n  }\n  if (rlen > length - index) {\n    return null;\n  }\n  var rindex = index;\n  index += rlen;\n\n  // sequence tag byte for s\n  if (signature[index++] !== 0x02) {\n    return null;\n  }\n\n  // length for s\n  var slen = signature[index++];\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80;\n    if (index + lenbyte > length) {\n      return null;\n    }\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {}\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      slen = (slen << 8) + signature[index];\n    }\n  }\n  if (slen > length - index) {\n    return null;\n  }\n  var sindex = index;\n  index += slen;\n\n  // ignore leading zeros in r\n  for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1) {}\n  // copy r value\n  if (rlen > 32) {\n    return null;\n  }\n  var rvalue = signature.slice(rindex, rindex + rlen);\n  rvalue.copy(r, 32 - rvalue.length);\n\n  // ignore leading zeros in s\n  for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1) {}\n  // copy s value\n  if (slen > 32) {\n    return null;\n  }\n  var svalue = signature.slice(sindex, sindex + slen);\n  svalue.copy(s, 32 - svalue.length);\n\n  return { r: r, s: s };\n};","exports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n","module.exports = require('./lib/index.js')\r\n","'use strict';\n\nvar secp256k1 = require('ethereum-cryptography/secp256k1');\n\nvar secp256k1v3 = require('./secp256k1-lib/index');\nvar der = require('./secp256k1-lib/der');\n\n/**\n * Verify an ECDSA privateKey\n * @method privateKeyVerify\n * @param {Buffer} privateKey\n * @return {boolean}\n */\nvar privateKeyVerify = function privateKeyVerify(privateKey) {\n  // secp256k1 v4 version throws when privateKey length is not 32\n  if (privateKey.length !== 32) {\n    return false;\n  }\n\n  return secp256k1.privateKeyVerify(Uint8Array.from(privateKey));\n};\n\n/**\n * Export a privateKey in DER format\n * @method privateKeyExport\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {boolean}\n */\nvar privateKeyExport = function privateKeyExport(privateKey, compressed) {\n  // privateKeyExport method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);\n\n  return der.privateKeyExport(privateKey, publicKey, compressed);\n};\n\n/**\n * Import a privateKey in DER format\n * @method privateKeyImport\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\nvar privateKeyImport = function privateKeyImport(privateKey) {\n  // privateKeyImport method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  privateKey = der.privateKeyImport(privateKey);\n  if (privateKey !== null && privateKey.length === 32 && privateKeyVerify(privateKey)) {\n    return privateKey;\n  }\n\n  throw new Error(\"couldn't import from DER format\");\n};\n\n/**\n * Negate a privateKey by subtracting it from the order of the curve's base point\n * @method privateKeyNegate\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nvar privateKeyNegate = function privateKeyNegate(privateKey) {\n  return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));\n};\n\n/**\n * Compute the inverse of a privateKey (modulo the order of the curve's base point).\n * @method privateKeyModInverse\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nvar privateKeyModInverse = function privateKeyModInverse(privateKey) {\n  if (privateKey.length !== 32) {\n    throw new Error('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));\n};\n\n/**\n * Tweak a privateKey by adding tweak to it.\n * @method privateKeyTweakAdd\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nvar privateKeyTweakAdd = function privateKeyTweakAdd(privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));\n};\n\n/**\n * Tweak a privateKey by multiplying it by a tweak.\n * @method privateKeyTweakMul\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nvar privateKeyTweakMul = function privateKeyTweakMul(privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));\n};\n\n/**\n * Compute the public key for a privateKey.\n * @method publicKeyCreate\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyCreate = function publicKeyCreate(privateKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));\n};\n\n/**\n * Convert a publicKey to compressed or uncompressed form.\n * @method publicKeyConvert\n * @param {Buffer} publicKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyConvert = function publicKeyConvert(publicKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));\n};\n\n/**\n * Verify an ECDSA publicKey.\n * @method publicKeyVerify\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nvar publicKeyVerify = function publicKeyVerify(publicKey) {\n  // secp256k1 v4 version throws when publicKey length is not 33 or 65\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(Uint8Array.from(publicKey));\n};\n\n/**\n * Tweak a publicKey by adding tweak times the generator to it.\n * @method publicKeyTweakAdd\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyTweakAdd = function publicKeyTweakAdd(publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n\n/**\n * Tweak a publicKey by multiplying it by a tweak value\n * @method publicKeyTweakMul\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyTweakMul = function publicKeyTweakMul(publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n\n/**\n * Add a given publicKeys together.\n * @method publicKeyCombine\n * @param {Array<Buffer>} publicKeys\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyCombine = function publicKeyCombine(publicKeys, compressed) {\n  var keys = [];\n  publicKeys.forEach(function (publicKey) {\n    keys.push(Uint8Array.from(publicKey));\n  });\n\n  return Buffer.from(secp256k1.publicKeyCombine(keys, compressed));\n};\n\n/**\n * Convert a signature to a normalized lower-S form.\n * @method signatureNormalize\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureNormalize = function signatureNormalize(signature) {\n  return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));\n};\n\n/**\n * Serialize an ECDSA signature in DER format.\n * @method signatureExport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureExport = function signatureExport(signature) {\n  return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));\n};\n\n/**\n * Parse a DER ECDSA signature (follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureImport = function signatureImport(signature) {\n  return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));\n};\n\n/**\n * Parse a DER ECDSA signature (not follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImportLax\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureImportLax = function signatureImportLax(signature) {\n  // signatureImportLax method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure that signature is greater than 0\n  if (signature.length === 0) {\n    throw new RangeError('signature length is invalid');\n  }\n\n  var sigObj = der.signatureImportLax(signature);\n  if (sigObj === null) {\n    throw new Error(\"couldn't parse DER signature\");\n  }\n\n  return secp256k1v3.signatureImport(sigObj);\n};\n\n/**\n * Create an ECDSA signature. Always return low-S signature.\n * @method sign\n * @param {Buffer} message\n * @param {Buffer} privateKey\n * @param {Object} options\n * @return {Buffer}\n */\nvar sign = function sign(message, privateKey, options) {\n  if (options === null) {\n    throw new TypeError('options should be an Object');\n  }\n\n  var signOptions = void 0;\n\n  if (options) {\n    signOptions = {};\n\n    if (options.data === null) {\n      throw new TypeError('options.data should be a Buffer');\n    }\n\n    if (options.data) {\n      // validate option.data length\n      if (options.data.length !== 32) {\n        throw new RangeError('options.data length is invalid');\n      }\n\n      signOptions.data = new Uint8Array(options.data);\n    }\n\n    if (options.noncefn === null) {\n      throw new TypeError('options.noncefn should be a Function');\n    }\n\n    if (options.noncefn) {\n      //  convert option.noncefn function signature\n      signOptions.noncefn = function (message, privateKey, algo, data, attempt) {\n        var bufferAlgo = algo != null ? Buffer.from(algo) : null;\n        var bufferData = data != null ? Buffer.from(data) : null;\n\n        var buffer = Buffer.from('');\n\n        if (options.noncefn) {\n          buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt);\n        }\n\n        return Uint8Array.from(buffer);\n      };\n    }\n  }\n\n  var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);\n\n  return {\n    signature: Buffer.from(sig.signature),\n    recovery: sig.recid\n  };\n};\n\n/**\n * Verify an ECDSA signature.\n * @method verify\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nvar verify = function verify(message, signature, publicKey) {\n  // note: secp256k1 v4 verify method has a different argument order\n  return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);\n};\n\n/**\n * Recover an ECDSA public key from a signature.\n * @method recover\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Number} recid\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar recover = function recover(message, signature, recid, compressed) {\n  // note: secp256k1 v4 recover method has a different argument order\n  return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));\n};\n\n/**\n * Compute an EC Diffie-Hellman secret and applied sha256 to compressed public key.\n * @method ecdh\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nvar ecdh = function ecdh(publicKey, privateKey) {\n  // note: secp256k1 v3 doesn't allow optional parameter\n  return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));\n};\n\n/**\n * Compute an EC Diffie-Hellman secret and return public key as result\n * @method ecdhUnsafe\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar ecdhUnsafe = function ecdhUnsafe(publicKey, privateKey, compressed) {\n  // ecdhUnsafe method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure valid publicKey length\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    throw new RangeError('public key length is invalid');\n  }\n\n  // ensure valid privateKey length\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));\n};\n\nmodule.exports = {\n  privateKeyVerify: privateKeyVerify,\n  privateKeyExport: privateKeyExport,\n  privateKeyImport: privateKeyImport,\n  privateKeyNegate: privateKeyNegate,\n  privateKeyModInverse: privateKeyModInverse,\n  privateKeyTweakAdd: privateKeyTweakAdd,\n  privateKeyTweakMul: privateKeyTweakMul,\n\n  publicKeyCreate: publicKeyCreate,\n  publicKeyConvert: publicKeyConvert,\n  publicKeyVerify: publicKeyVerify,\n  publicKeyTweakAdd: publicKeyTweakAdd,\n  publicKeyTweakMul: publicKeyTweakMul,\n  publicKeyCombine: publicKeyCombine,\n\n  signatureNormalize: signatureNormalize,\n  signatureExport: signatureExport,\n  signatureImport: signatureImport,\n  signatureImportLax: signatureImportLax,\n\n  sign: sign,\n  verify: verify,\n  recover: recover,\n\n  ecdh: ecdh,\n  ecdhUnsafe: ecdhUnsafe\n};",";(function(global) {\n\n'use strict';\n\nvar nextTick = function (fn) { setTimeout(fn, 0); }\nif (typeof process != 'undefined' && process && typeof process.nextTick == 'function') {\n\t// node.js and the like\n\tnextTick = process.nextTick;\n}\n\nfunction semaphore(capacity) {\n\tvar semaphore = {\n\t\tcapacity: capacity || 1,\n\t\tcurrent: 0,\n\t\tqueue: [],\n\t\tfirstHere: false,\n\n\t\ttake: function() {\n\t\t\tif (semaphore.firstHere === false) {\n        \t\t\tsemaphore.current++;\n        \t\t\tsemaphore.firstHere = true;\n        \t\t\tvar isFirst = 1;\n      \t\t\t} else {\n        \t\t\tvar isFirst = 0;\n      \t\t\t}\n\t\t\tvar item = { n: 1 };\n\n\t\t\tif (typeof arguments[0] == 'function') {\n\t\t\t\titem.task = arguments[0];\n\t\t\t} else {\n\t\t\t\titem.n = arguments[0];\n\t\t\t}\n\n\t\t\tif (arguments.length >= 2)  {\n\t\t\t\tif (typeof arguments[1] == 'function') item.task = arguments[1];\n\t\t\t\telse item.n = arguments[1];\n\t\t\t}\n\n\t\t\tvar task = item.task;\n\t\t\titem.task = function() { task(semaphore.leave); };\n\n\t\t\tif (semaphore.current + item.n - isFirst > semaphore.capacity) {\n        \t\t\tif (isFirst === 1) {\n        \t\t\t\tsemaphore.current--;\n        \t\t\t\tsemaphore.firstHere = false;\n        \t\t\t}\n\t\t\t\treturn semaphore.queue.push(item);\n\t\t\t}\n\n\t\t\tsemaphore.current += item.n - isFirst;\n\t\t\titem.task(semaphore.leave);\n      \t\t\tif (isFirst === 1) semaphore.firstHere = false;\n\t\t},\n\n\t\tleave: function(n) {\n\t\t\tn = n || 1;\n\n\t\t\tsemaphore.current -= n;\n\n\t\t\tif (!semaphore.queue.length) {\n\t\t\t\tif (semaphore.current < 0) {\n\t\t\t\t\tthrow new Error('leave called too many times.');\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar item = semaphore.queue[0];\n\n\t\t\tif (item.n + semaphore.current > semaphore.capacity) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsemaphore.queue.shift();\n\t\t\tsemaphore.current += item.n;\n\n\t\t\tnextTick(item.task);\n\t\t},\n\n\t\tavailable: function(n) {\n\t\t\tn = n || 1;\n\t\t\treturn(semaphore.current + n <= semaphore.capacity);\n\t\t}\n\t};\n\n\treturn semaphore;\n};\n\nif (typeof exports === 'object') {\n    // node export\n    module.exports = semaphore;\n} else if (typeof define === 'function' && define.amd) {\n    // amd export\n    define(function () {\n        return semaphore;\n    });\n} else {\n    // browser global\n    global.semaphore = semaphore;\n}\n}(this));\n","var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nmodule.exports = function (obj, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nvar isArray = Array.isArray || function (x) {\n    return {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var has = Object.prototype.hasOwnProperty || function () { return true };\n    var keys = [];\n    for (var key in obj) {\n        if (has.call(obj, key)) keys.push(key);\n    }\n    return keys;\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _require = require('ethereum-cryptography/keccak'),\n    keccak224 = _require.keccak224,\n    keccak384 = _require.keccak384,\n    k256 = _require.keccak256,\n    keccak512 = _require.keccak512;\n\nvar secp256k1 = require('./secp256k1-adapter');\nvar assert = require('assert');\nvar rlp = require('rlp');\nvar BN = require('bn.js');\nvar createHash = require('create-hash');\nvar Buffer = require('safe-buffer').Buffer;\nObject.assign(exports, require('ethjs-util'));\n\n/**\n * the max integer that this VM can handle (a ```BN```)\n * @var {BN} MAX_INTEGER\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n\n/**\n * 2^256 (a ```BN```)\n * @var {BN} TWO_POW256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n\n/**\n * Keccak-256 hash of null (a ```String```)\n * @var {String} KECCAK256_NULL_S\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\nexports.SHA3_NULL_S = exports.KECCAK256_NULL_S;\n\n/**\n * Keccak-256 hash of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_NULL\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\nexports.SHA3_NULL = exports.KECCAK256_NULL;\n\n/**\n * Keccak-256 of an RLP of an empty array (a ```String```)\n * @var {String} KECCAK256_RLP_ARRAY_S\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\nexports.SHA3_RLP_ARRAY_S = exports.KECCAK256_RLP_ARRAY_S;\n\n/**\n * Keccak-256 of an RLP of an empty array (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP_ARRAY\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\nexports.SHA3_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY;\n\n/**\n * Keccak-256 hash of the RLP of null  (a ```String```)\n * @var {String} KECCAK256_RLP_S\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\nexports.SHA3_RLP_S = exports.KECCAK256_RLP_S;\n\n/**\n * Keccak-256 hash of the RLP of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\nexports.SHA3_RLP = exports.KECCAK256_RLP;\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n * @var {Function}\n */\nexports.BN = BN;\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n * @var {Function}\n */\nexports.rlp = rlp;\n\n/**\n * [`secp256k1`](https://github.com/cryptocoinjs/secp256k1-node/)\n * @var {Object}\n */\nexports.secp256k1 = secp256k1;\n\n/**\n * Returns a buffer filled with 0s\n * @method zeros\n * @param {Number} bytes  the number of bytes the buffer should be\n * @return {Buffer}\n */\nexports.zeros = function (bytes) {\n  return Buffer.allocUnsafe(bytes).fill(0);\n};\n\n/**\n  * Returns a zero address\n  * @method zeroAddress\n  * @return {String}\n  */\nexports.zeroAddress = function () {\n  var addressLength = 20;\n  var zeroAddress = exports.zeros(addressLength);\n  return exports.bufferToHex(zeroAddress);\n};\n\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @method lsetLength\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @param {Boolean} [right=false] whether to start padding form the left or right\n * @return {Buffer|Array}\n */\nexports.setLengthLeft = exports.setLength = function (msg, length, right) {\n  var buf = exports.zeros(length);\n  msg = exports.toBuffer(msg);\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n    return msg.slice(-length);\n  }\n};\n\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @return {Buffer|Array}\n */\nexports.setLengthRight = function (msg, length) {\n  return exports.setLength(msg, length, true);\n};\n\n/**\n * Trims leading zeros from a `Buffer` or an `Array`\n * @param {Buffer|Array|String} a\n * @return {Buffer|Array|String}\n */\nexports.unpad = exports.stripZeros = function (a) {\n  a = exports.stripHexPrefix(a);\n  var first = a[0];\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n  return a;\n};\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param {*} v the value\n */\nexports.toBuffer = function (v) {\n  if (!Buffer.isBuffer(v)) {\n    if (Array.isArray(v)) {\n      v = Buffer.from(v);\n    } else if (typeof v === 'string') {\n      if (exports.isHexString(v)) {\n        v = Buffer.from(exports.padToEven(exports.stripHexPrefix(v)), 'hex');\n      } else {\n        v = Buffer.from(v);\n      }\n    } else if (typeof v === 'number') {\n      v = exports.intToBuffer(v);\n    } else if (v === null || v === undefined) {\n      v = Buffer.allocUnsafe(0);\n    } else if (BN.isBN(v)) {\n      v = v.toArrayLike(Buffer);\n    } else if (v.toArray) {\n      // converts a BN to a Buffer\n      v = Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n  return v;\n};\n\n/**\n * Converts a `Buffer` to a `Number`\n * @param {Buffer} buf\n * @return {Number}\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n  return new BN(exports.toBuffer(buf)).toNumber();\n};\n\n/**\n * Converts a `Buffer` into a hex `String`\n * @param {Buffer} buf\n * @return {String}\n */\nexports.bufferToHex = function (buf) {\n  buf = exports.toBuffer(buf);\n  return '0x' + buf.toString('hex');\n};\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param {Buffer} num\n * @return {BN}\n */\nexports.fromSigned = function (num) {\n  return new BN(num).fromTwos(256);\n};\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param {BN} num\n * @return {Buffer}\n */\nexports.toUnsigned = function (num) {\n  return Buffer.from(num.toTwos(256).toArray());\n};\n\n/**\n * Creates Keccak hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Number} [bits=256] the Keccak width\n * @return {Buffer}\n */\nexports.keccak = function (a, bits) {\n  a = exports.toBuffer(a);\n  if (!bits) bits = 256;\n\n  switch (bits) {\n    case 224:\n      {\n        return keccak224(a);\n      }\n    case 256:\n      {\n        return k256(a);\n      }\n    case 384:\n      {\n        return keccak384(a);\n      }\n    case 512:\n      {\n        return keccak512(a);\n      }\n    default:\n      {\n        throw new Error('Invald algorithm: keccak' + bits);\n      }\n  }\n};\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256)\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\nexports.keccak256 = function (a) {\n  return exports.keccak(a);\n};\n\n/**\n * Creates SHA-3 (Keccak) hash of the input [OBSOLETE]\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Number} [bits=256] the SHA-3 width\n * @return {Buffer}\n */\nexports.sha3 = exports.keccak;\n\n/**\n * Creates SHA256 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\nexports.sha256 = function (a) {\n  a = exports.toBuffer(a);\n  return createHash('sha256').update(a).digest();\n};\n\n/**\n * Creates RIPEMD160 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Boolean} padded whether it should be padded to 256 bits or not\n * @return {Buffer}\n */\nexports.ripemd160 = function (a, padded) {\n  a = exports.toBuffer(a);\n  var hash = createHash('rmd160').update(a).digest();\n  if (padded === true) {\n    return exports.setLength(hash, 32);\n  } else {\n    return hash;\n  }\n};\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\nexports.rlphash = function (a) {\n  return exports.keccak(rlp.encode(a));\n};\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n * @param {Buffer} privateKey\n * @return {Boolean}\n */\nexports.isValidPrivate = function (privateKey) {\n  return secp256k1.privateKeyVerify(privateKey);\n};\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param {Buffer} publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Boolean}\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n  }\n\n  if (!sanitize) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(publicKey);\n};\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param {Buffer} pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Buffer}\n */\nexports.pubToAddress = exports.publicToAddress = function (pubKey, sanitize) {\n  pubKey = exports.toBuffer(pubKey);\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n  }\n  assert(pubKey.length === 64);\n  // Only take the lower 160bits of the hash\n  return exports.keccak(pubKey).slice(-20);\n};\n\n/**\n * Returns the ethereum public key of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\nvar privateToPublic = exports.privateToPublic = function (privateKey) {\n  privateKey = exports.toBuffer(privateKey);\n  // skip the type flag and use the X, Y points\n  return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n\n/**\n * Converts a public key to the Ethereum format.\n * @param {Buffer} publicKey\n * @return {Buffer}\n */\nexports.importPublic = function (publicKey) {\n  publicKey = exports.toBuffer(publicKey);\n  if (publicKey.length !== 64) {\n    publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n  }\n  return publicKey;\n};\n\n/**\n * ECDSA sign\n * @param {Buffer} msgHash\n * @param {Buffer} privateKey\n * @return {Object}\n */\nexports.ecsign = function (msgHash, privateKey) {\n  var sig = secp256k1.sign(msgHash, privateKey);\n\n  var ret = {};\n  ret.r = sig.signature.slice(0, 32);\n  ret.s = sig.signature.slice(32, 64);\n  ret.v = sig.recovery + 27;\n  return ret;\n};\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n * @param message\n * @returns {Buffer} hash\n */\nexports.hashPersonalMessage = function (message) {\n  var prefix = exports.toBuffer('\\x19Ethereum Signed Message:\\n' + message.length.toString());\n  return exports.keccak(Buffer.concat([prefix, message]));\n};\n\n/**\n * ECDSA public key recovery from signature\n * @param {Buffer} msgHash\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @return {Buffer} publicKey\n */\nexports.ecrecover = function (msgHash, v, r, s) {\n  var signature = Buffer.concat([exports.setLength(r, 32), exports.setLength(s, 32)], 64);\n  var recovery = v - 27;\n  if (recovery !== 0 && recovery !== 1) {\n    throw new Error('Invalid signature v value');\n  }\n  var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n  return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @return {String} sig\n */\nexports.toRpcSig = function (v, r, s) {\n  // NOTE: with potential introduction of chainId this might need to be updated\n  if (v !== 27 && v !== 28) {\n    throw new Error('Invalid recovery id');\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  // FIXME: this might change in the future - https://github.com/ethereum/go-ethereum/issues/2053\n  return exports.bufferToHex(Buffer.concat([exports.setLengthLeft(r, 32), exports.setLengthLeft(s, 32), exports.toBuffer(v - 27)]));\n};\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * @param {String} sig\n * @return {Object}\n */\nexports.fromRpcSig = function (sig) {\n  sig = exports.toBuffer(sig);\n\n  // NOTE: with potential introduction of chainId this might need to be updated\n  if (sig.length !== 65) {\n    throw new Error('Invalid signature length');\n  }\n\n  var v = sig[64];\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27;\n  }\n\n  return {\n    v: v,\n    r: sig.slice(0, 32),\n    s: sig.slice(32, 64)\n  };\n};\n\n/**\n * Returns the ethereum address of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\nexports.privateToAddress = function (privateKey) {\n  return exports.publicToAddress(privateToPublic(privateKey));\n};\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too\n * @param {String} address\n * @return {Boolean}\n */\nexports.isValidAddress = function (address) {\n  return (/^0x[0-9a-fA-F]{40}$/.test(address)\n  );\n};\n\n/**\n  * Checks if a given address is a zero address\n  * @method isZeroAddress\n  * @param {String} address\n  * @return {Boolean}\n  */\nexports.isZeroAddress = function (address) {\n  var zeroAddress = exports.zeroAddress();\n  return zeroAddress === exports.addHexPrefix(address);\n};\n\n/**\n * Returns a checksummed address\n * @param {String} address\n * @return {String}\n */\nexports.toChecksumAddress = function (address) {\n  address = exports.stripHexPrefix(address).toLowerCase();\n  var hash = exports.keccak(address).toString('hex');\n  var ret = '0x';\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase();\n    } else {\n      ret += address[i];\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Checks if the address is a valid checksummed address\n * @param {Buffer} address\n * @return {Boolean}\n */\nexports.isValidChecksumAddress = function (address) {\n  return exports.isValidAddress(address) && exports.toChecksumAddress(address) === address;\n};\n\n/**\n * Generates an address of a newly created contract\n * @param {Buffer} from the address which is creating this new address\n * @param {Buffer} nonce the nonce of the from account\n * @return {Buffer}\n */\nexports.generateAddress = function (from, nonce) {\n  from = exports.toBuffer(from);\n  nonce = new BN(nonce);\n\n  if (nonce.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    nonce = null;\n  } else {\n    nonce = Buffer.from(nonce.toArray());\n  }\n\n  // Only take the lower 160bits of the hash\n  return exports.rlphash([from, nonce]).slice(-20);\n};\n\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium)\n * @param {Buffer|String} address\n * @return {Boolean}\n */\nexports.isPrecompiled = function (address) {\n  var a = exports.unpad(address);\n  return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\"\n * @param {String} str\n * @return {String}\n */\nexports.addHexPrefix = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return exports.isHexPrefixed(str) ? str : '0x' + str;\n};\n\n/**\n * Validate ECDSA signature\n * @method isValidSignature\n * @param {Buffer} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @param {Boolean} [homestead=true]\n * @return {Boolean}\n */\n\nexports.isValidSignature = function (v, r, s, homestead) {\n  var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n  var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false;\n  }\n\n  if (v !== 27 && v !== 28) {\n    return false;\n  }\n\n  r = new BN(r);\n  s = new BN(s);\n\n  if (r.isZero() || r.gt(SECP256K1_N) || s.isZero() || s.gt(SECP256K1_N)) {\n    return false;\n  }\n\n  if (homestead === false && new BN(s).cmp(SECP256K1_N_DIV_2) === 1) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Converts a `Buffer` or `Array` to JSON\n * @param {Buffer|Array} ba\n * @return {Array|String|null}\n */\nexports.baToJSON = function (ba) {\n  if (Buffer.isBuffer(ba)) {\n    return '0x' + ba.toString('hex');\n  } else if (ba instanceof Array) {\n    var array = [];\n    for (var i = 0; i < ba.length; i++) {\n      array.push(exports.baToJSON(ba[i]));\n    }\n    return array;\n  }\n};\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param {Object} self the `Object` to define properties on\n * @param {Array} fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param {*} data data to be validated against the definitions\n */\nexports.defineProperties = function (self, fields, data) {\n  self.raw = [];\n  self._fields = [];\n\n  // attach the `toJSON`\n  self.toJSON = function (label) {\n    if (label) {\n      var obj = {};\n      self._fields.forEach(function (field) {\n        obj[field] = '0x' + self[field].toString('hex');\n      });\n      return obj;\n    }\n    return exports.baToJSON(this.raw);\n  };\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw);\n  };\n\n  fields.forEach(function (field, i) {\n    self._fields.push(field.name);\n    function getter() {\n      return self.raw[i];\n    }\n    function setter(v) {\n      v = exports.toBuffer(v);\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0);\n      }\n\n      if (field.allowLess && field.length) {\n        v = exports.stripZeros(v);\n        assert(field.length >= v.length, 'The field ' + field.name + ' must not have more ' + field.length + ' bytes');\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(field.length === v.length, 'The field ' + field.name + ' must have byte length of ' + field.length);\n      }\n\n      self.raw[i] = v;\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter\n    });\n\n    if (field.default) {\n      self[field.name] = field.default;\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n      });\n    }\n  });\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(exports.stripHexPrefix(data), 'hex');\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data);\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data');\n      }\n\n      // make sure all the items are buffers\n      data.forEach(function (d, i) {\n        self[self._fields[i]] = exports.toBuffer(d);\n      });\n    } else if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n      var keys = Object.keys(data);\n      fields.forEach(function (field) {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name];\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias];\n      });\n    } else {\n      throw new Error('invalid data');\n    }\n  }\n};","/* eslint-disable no-useless-escape */\r\nconst utils = require('ethereumjs-util')\r\nconst BN = require('bn.js')\r\n\r\nvar ABI = function () {\r\n}\r\n\r\n// Convert from short to canonical names\r\n// FIXME: optimise or make this nicer?\r\nfunction elementaryName (name) {\r\n  if (name.startsWith('int[')) {\r\n    return 'int256' + name.slice(3)\r\n  } else if (name === 'int') {\r\n    return 'int256'\r\n  } else if (name.startsWith('uint[')) {\r\n    return 'uint256' + name.slice(4)\r\n  } else if (name === 'uint') {\r\n    return 'uint256'\r\n  } else if (name.startsWith('fixed[')) {\r\n    return 'fixed128x128' + name.slice(5)\r\n  } else if (name === 'fixed') {\r\n    return 'fixed128x128'\r\n  } else if (name.startsWith('ufixed[')) {\r\n    return 'ufixed128x128' + name.slice(6)\r\n  } else if (name === 'ufixed') {\r\n    return 'ufixed128x128'\r\n  }\r\n  return name\r\n}\r\n\r\nABI.eventID = function (name, types) {\r\n  // FIXME: use node.js util.format?\r\n  var sig = name + '(' + types.map(elementaryName).join(',') + ')'\r\n  return utils.keccak256(Buffer.from(sig))\r\n}\r\n\r\nABI.methodID = function (name, types) {\r\n  return ABI.eventID(name, types).slice(0, 4)\r\n}\r\n\r\n// Parse N from type<N>\r\nfunction parseTypeN (type) {\r\n  return parseInt(/^\\D+(\\d+)$/.exec(type)[1], 10)\r\n}\r\n\r\n// Parse N,M from type<N>x<M>\r\nfunction parseTypeNxM (type) {\r\n  var tmp = /^\\D+(\\d+)x(\\d+)$/.exec(type)\r\n  return [ parseInt(tmp[1], 10), parseInt(tmp[2], 10) ]\r\n}\r\n\r\n// Parse N in type[<N>] where \"type\" can itself be an array type.\r\nfunction parseTypeArray (type) {\r\n  var tmp = type.match(/(.*)\\[(.*?)\\]$/)\r\n  if (tmp) {\r\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10)\r\n  }\r\n  return null\r\n}\r\n\r\nfunction parseNumber (arg) {\r\n  var type = typeof arg\r\n  if (type === 'string') {\r\n    if (utils.isHexPrefixed(arg)) {\r\n      return new BN(utils.stripHexPrefix(arg), 16)\r\n    } else {\r\n      return new BN(arg, 10)\r\n    }\r\n  } else if (type === 'number') {\r\n    return new BN(arg)\r\n  } else if (arg.toArray) {\r\n    // assume this is a BN for the moment, replace with BN.isBN soon\r\n    return arg\r\n  } else {\r\n    throw new Error('Argument is not a number')\r\n  }\r\n}\r\n\r\n// someMethod(bytes,uint)\r\n// someMethod(bytes,uint):(boolean)\r\nfunction parseSignature (sig) {\r\n  var tmp = /^(\\w+)\\((.*)\\)$/.exec(sig)\r\n\r\n  if (tmp.length !== 3) {\r\n    throw new Error('Invalid method signature')\r\n  }\r\n\r\n  var args = /^(.+)\\):\\((.+)$/.exec(tmp[2])\r\n\r\n  if (args !== null && args.length === 3) {\r\n    return {\r\n      method: tmp[1],\r\n      args: args[1].split(','),\r\n      retargs: args[2].split(',')\r\n    }\r\n  } else {\r\n    var params = tmp[2].split(',')\r\n    if (params.length === 1 && params[0] === '') {\r\n      // Special-case (possibly naive) fixup for functions that take no arguments.\r\n      // TODO: special cases are always bad, but this makes the function return\r\n      // match what the calling functions expect\r\n      params = []\r\n    }\r\n    return {\r\n      method: tmp[1],\r\n      args: params\r\n    }\r\n  }\r\n}\r\n\r\n// Encodes a single item (can be dynamic array)\r\n// @returns: Buffer\r\nfunction encodeSingle (type, arg) {\r\n  var size, num, ret, i\r\n\r\n  if (type === 'address') {\r\n    return encodeSingle('uint160', parseNumber(arg))\r\n  } else if (type === 'bool') {\r\n    return encodeSingle('uint8', arg ? 1 : 0)\r\n  } else if (type === 'string') {\r\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'))\r\n  } else if (isArray(type)) {\r\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\r\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\r\n    if (typeof arg.length === 'undefined') {\r\n      throw new Error('Not an array?')\r\n    }\r\n    size = parseTypeArray(type)\r\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\r\n      throw new Error('Elements exceed array size: ' + size)\r\n    }\r\n    ret = []\r\n    type = type.slice(0, type.lastIndexOf('['))\r\n    if (typeof arg === 'string') {\r\n      arg = JSON.parse(arg)\r\n    }\r\n    for (i in arg) {\r\n      ret.push(encodeSingle(type, arg[i]))\r\n    }\r\n    if (size === 'dynamic') {\r\n      var length = encodeSingle('uint256', arg.length)\r\n      ret.unshift(length)\r\n    }\r\n    return Buffer.concat(ret)\r\n  } else if (type === 'bytes') {\r\n    arg = Buffer.from(arg)\r\n\r\n    ret = Buffer.concat([ encodeSingle('uint256', arg.length), arg ])\r\n\r\n    if ((arg.length % 32) !== 0) {\r\n      ret = Buffer.concat([ ret, utils.zeros(32 - (arg.length % 32)) ])\r\n    }\r\n\r\n    return ret\r\n  } else if (type.startsWith('bytes')) {\r\n    size = parseTypeN(type)\r\n    if (size < 1 || size > 32) {\r\n      throw new Error('Invalid bytes<N> width: ' + size)\r\n    }\r\n\r\n    return utils.setLengthRight(arg, 32)\r\n  } else if (type.startsWith('uint')) {\r\n    size = parseTypeN(type)\r\n    if ((size % 8) || (size < 8) || (size > 256)) {\r\n      throw new Error('Invalid uint<N> width: ' + size)\r\n    }\r\n\r\n    num = parseNumber(arg)\r\n    if (num.bitLength() > size) {\r\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\r\n    }\r\n\r\n    if (num < 0) {\r\n      throw new Error('Supplied uint is negative')\r\n    }\r\n\r\n    return num.toArrayLike(Buffer, 'be', 32)\r\n  } else if (type.startsWith('int')) {\r\n    size = parseTypeN(type)\r\n    if ((size % 8) || (size < 8) || (size > 256)) {\r\n      throw new Error('Invalid int<N> width: ' + size)\r\n    }\r\n\r\n    num = parseNumber(arg)\r\n    if (num.bitLength() > size) {\r\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\r\n    }\r\n\r\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32)\r\n  } else if (type.startsWith('ufixed')) {\r\n    size = parseTypeNxM(type)\r\n\r\n    num = parseNumber(arg)\r\n\r\n    if (num < 0) {\r\n      throw new Error('Supplied ufixed is negative')\r\n    }\r\n\r\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))))\r\n  } else if (type.startsWith('fixed')) {\r\n    size = parseTypeNxM(type)\r\n\r\n    return encodeSingle('int256', parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))))\r\n  }\r\n\r\n  throw new Error('Unsupported or invalid type: ' + type)\r\n}\r\n\r\n// Decodes a single item (can be dynamic array)\r\n// @returns: array\r\n// FIXME: this method will need a lot of attention at checking limits and validation\r\nfunction decodeSingle (parsedType, data, offset) {\r\n  if (typeof parsedType === 'string') {\r\n    parsedType = parseType(parsedType)\r\n  }\r\n  var size, num, ret, i\r\n\r\n  if (parsedType.name === 'address') {\r\n    return decodeSingle(parsedType.rawType, data, offset).toArrayLike(Buffer, 'be', 20).toString('hex')\r\n  } else if (parsedType.name === 'bool') {\r\n    return decodeSingle(parsedType.rawType, data, offset).toString() === new BN(1).toString()\r\n  } else if (parsedType.name === 'string') {\r\n    var bytes = decodeSingle(parsedType.rawType, data, offset)\r\n    return Buffer.from(bytes, 'utf8').toString()\r\n  } else if (parsedType.isArray) {\r\n    // this part handles fixed-length arrays ([2]) and variable length ([]) arrays\r\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\r\n    ret = []\r\n    size = parsedType.size\r\n\r\n    if (parsedType.size === 'dynamic') {\r\n      offset = decodeSingle('uint256', data, offset).toNumber()\r\n      size = decodeSingle('uint256', data, offset).toNumber()\r\n      offset = offset + 32\r\n    }\r\n    for (i = 0; i < size; i++) {\r\n      var decoded = decodeSingle(parsedType.subArray, data, offset)\r\n      ret.push(decoded)\r\n      offset += parsedType.subArray.memoryUsage\r\n    }\r\n    return ret\r\n  } else if (parsedType.name === 'bytes') {\r\n    offset = decodeSingle('uint256', data, offset).toNumber()\r\n    size = decodeSingle('uint256', data, offset).toNumber()\r\n    return data.slice(offset + 32, offset + 32 + size)\r\n  } else if (parsedType.name.startsWith('bytes')) {\r\n    return data.slice(offset, offset + parsedType.size)\r\n  } else if (parsedType.name.startsWith('uint')) {\r\n    num = new BN(data.slice(offset, offset + 32), 16, 'be')\r\n    if (num.bitLength() > parsedType.size) {\r\n      throw new Error('Decoded int exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\r\n    }\r\n    return num\r\n  } else if (parsedType.name.startsWith('int')) {\r\n    num = new BN(data.slice(offset, offset + 32), 16, 'be').fromTwos(256)\r\n    if (num.bitLength() > parsedType.size) {\r\n      throw new Error('Decoded uint exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\r\n    }\r\n\r\n    return num\r\n  } else if (parsedType.name.startsWith('ufixed')) {\r\n    size = new BN(2).pow(new BN(parsedType.size[1]))\r\n    num = decodeSingle('uint256', data, offset)\r\n    if (!num.mod(size).isZero()) {\r\n      throw new Error('Decimals not supported yet')\r\n    }\r\n    return num.div(size)\r\n  } else if (parsedType.name.startsWith('fixed')) {\r\n    size = new BN(2).pow(new BN(parsedType.size[1]))\r\n    num = decodeSingle('int256', data, offset)\r\n    if (!num.mod(size).isZero()) {\r\n      throw new Error('Decimals not supported yet')\r\n    }\r\n    return num.div(size)\r\n  }\r\n  throw new Error('Unsupported or invalid type: ' + parsedType.name)\r\n}\r\n\r\n// Parse the given type\r\n// @returns: {} containing the type itself, memory usage and (including size and subArray if applicable)\r\nfunction parseType (type) {\r\n  var size\r\n  var ret\r\n  if (isArray(type)) {\r\n    size = parseTypeArray(type)\r\n    var subArray = type.slice(0, type.lastIndexOf('['))\r\n    subArray = parseType(subArray)\r\n    ret = {\r\n      isArray: true,\r\n      name: type,\r\n      size: size,\r\n      memoryUsage: size === 'dynamic' ? 32 : subArray.memoryUsage * size,\r\n      subArray: subArray\r\n    }\r\n    return ret\r\n  } else {\r\n    var rawType\r\n    switch (type) {\r\n      case 'address':\r\n        rawType = 'uint160'\r\n        break\r\n      case 'bool':\r\n        rawType = 'uint8'\r\n        break\r\n      case 'string':\r\n        rawType = 'bytes'\r\n        break\r\n    }\r\n    ret = {\r\n      rawType: rawType,\r\n      name: type,\r\n      memoryUsage: 32\r\n    }\r\n\r\n    if ((type.startsWith('bytes') && type !== 'bytes') || type.startsWith('uint') || type.startsWith('int')) {\r\n      ret.size = parseTypeN(type)\r\n    } else if (type.startsWith('ufixed') || type.startsWith('fixed')) {\r\n      ret.size = parseTypeNxM(type)\r\n    }\r\n\r\n    if (type.startsWith('bytes') && type !== 'bytes' && (ret.size < 1 || ret.size > 32)) {\r\n      throw new Error('Invalid bytes<N> width: ' + ret.size)\r\n    }\r\n    if ((type.startsWith('uint') || type.startsWith('int')) && (ret.size % 8 || ret.size < 8 || ret.size > 256)) {\r\n      throw new Error('Invalid int/uint<N> width: ' + ret.size)\r\n    }\r\n    return ret\r\n  }\r\n}\r\n\r\n// Is a type dynamic?\r\nfunction isDynamic (type) {\r\n  // FIXME: handle all types? I don't think anything is missing now\r\n  return (type === 'string') || (type === 'bytes') || (parseTypeArray(type) === 'dynamic')\r\n}\r\n\r\n// Is a type an array?\r\nfunction isArray (type) {\r\n  return type.lastIndexOf(']') === type.length - 1\r\n}\r\n\r\n// Encode a method/event with arguments\r\n// @types an array of string type names\r\n// @args  an array of the appropriate values\r\nABI.rawEncode = function (types, values) {\r\n  var output = []\r\n  var data = []\r\n\r\n  var headLength = 0\r\n\r\n  types.forEach(function (type) {\r\n    if (isArray(type)) {\r\n      var size = parseTypeArray(type)\r\n\r\n      if (size !== 'dynamic') {\r\n        headLength += 32 * size\r\n      } else {\r\n        headLength += 32\r\n      }\r\n    } else {\r\n      headLength += 32\r\n    }\r\n  })\r\n\r\n  for (var i = 0; i < types.length; i++) {\r\n    var type = elementaryName(types[i])\r\n    var value = values[i]\r\n    var cur = encodeSingle(type, value)\r\n\r\n    // Use the head/tail method for storing dynamic data\r\n    if (isDynamic(type)) {\r\n      output.push(encodeSingle('uint256', headLength))\r\n      data.push(cur)\r\n      headLength += cur.length\r\n    } else {\r\n      output.push(cur)\r\n    }\r\n  }\r\n\r\n  return Buffer.concat(output.concat(data))\r\n}\r\n\r\nABI.rawDecode = function (types, data) {\r\n  var ret = []\r\n  data = Buffer.from(data)\r\n  var offset = 0\r\n  for (var i = 0; i < types.length; i++) {\r\n    var type = elementaryName(types[i])\r\n    var parsed = parseType(type, data, offset)\r\n    var decoded = decodeSingle(parsed, data, offset)\r\n    offset += parsed.memoryUsage\r\n    ret.push(decoded)\r\n  }\r\n  return ret\r\n}\r\n\r\nABI.simpleEncode = function (method) {\r\n  var args = Array.prototype.slice.call(arguments).slice(1)\r\n  var sig = parseSignature(method)\r\n\r\n  // FIXME: validate/convert arguments\r\n  if (args.length !== sig.args.length) {\r\n    throw new Error('Argument count mismatch')\r\n  }\r\n\r\n  return Buffer.concat([ ABI.methodID(sig.method, sig.args), ABI.rawEncode(sig.args, args) ])\r\n}\r\n\r\nABI.simpleDecode = function (method, data) {\r\n  var sig = parseSignature(method)\r\n\r\n  // FIXME: validate/convert arguments\r\n  if (!sig.retargs) {\r\n    throw new Error('No return values in method')\r\n  }\r\n\r\n  return ABI.rawDecode(sig.retargs, data)\r\n}\r\n\r\nfunction stringify (type, value) {\r\n  if (type.startsWith('address') || type.startsWith('bytes')) {\r\n    return '0x' + value.toString('hex')\r\n  } else {\r\n    return value.toString()\r\n  }\r\n}\r\n\r\nABI.stringify = function (types, values) {\r\n  var ret = []\r\n\r\n  for (var i in types) {\r\n    var type = types[i]\r\n    var value = values[i]\r\n\r\n    // if it is an array type, concat the items\r\n    if (/^[^\\[]+\\[.*\\]$/.test(type)) {\r\n      value = value.map(function (item) {\r\n        return stringify(type, item)\r\n      }).join(', ')\r\n    } else {\r\n      value = stringify(type, value)\r\n    }\r\n\r\n    ret.push(value)\r\n  }\r\n\r\n  return ret\r\n}\r\n\r\nABI.solidityHexValue = function (type, value, bitsize) {\r\n  // pass in bitsize = null if use default bitsize\r\n  var size, num\r\n  if (isArray(type)) {\r\n    var subType = type.replace(/\\[.*?\\]/, '')\r\n    if (!isArray(subType)) {\r\n      var arraySize = parseTypeArray(type)\r\n      if (arraySize !== 'dynamic' && arraySize !== 0 && value.length > arraySize) {\r\n        throw new Error('Elements exceed array size: ' + arraySize)\r\n      }\r\n    }\r\n    var arrayValues = value.map(function (v) {\r\n      return ABI.solidityHexValue(subType, v, 256)\r\n    })\r\n    return Buffer.concat(arrayValues)\r\n  } else if (type === 'bytes') {\r\n    return value\r\n  } else if (type === 'string') {\r\n    return Buffer.from(value, 'utf8')\r\n  } else if (type === 'bool') {\r\n    bitsize = bitsize || 8\r\n    var padding = Array((bitsize) / 4).join('0')\r\n    return Buffer.from(value ? padding + '1' : padding + '0', 'hex')\r\n  } else if (type === 'address') {\r\n    var bytesize = 20\r\n    if (bitsize) {\r\n      bytesize = bitsize / 8\r\n    }\r\n    return utils.setLengthLeft(value, bytesize)\r\n  } else if (type.startsWith('bytes')) {\r\n    size = parseTypeN(type)\r\n    if (size < 1 || size > 32) {\r\n      throw new Error('Invalid bytes<N> width: ' + size)\r\n    }\r\n\r\n    return utils.setLengthRight(value, size)\r\n  } else if (type.startsWith('uint')) {\r\n    size = parseTypeN(type)\r\n    if ((size % 8) || (size < 8) || (size > 256)) {\r\n      throw new Error('Invalid uint<N> width: ' + size)\r\n    }\r\n\r\n    num = parseNumber(value)\r\n    if (num.bitLength() > size) {\r\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\r\n    }\r\n\r\n    bitsize = bitsize || size\r\n    return num.toArrayLike(Buffer, 'be', bitsize / 8)\r\n  } else if (type.startsWith('int')) {\r\n    size = parseTypeN(type)\r\n    if ((size % 8) || (size < 8) || (size > 256)) {\r\n      throw new Error('Invalid int<N> width: ' + size)\r\n    }\r\n\r\n    num = parseNumber(value)\r\n    if (num.bitLength() > size) {\r\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\r\n    }\r\n\r\n    bitsize = bitsize || size\r\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8)\r\n  } else {\r\n    // FIXME: support all other types\r\n    throw new Error('Unsupported or invalid type: ' + type)\r\n  }\r\n}\r\n\r\nABI.solidityPack = function (types, values) {\r\n  if (types.length !== values.length) {\r\n    throw new Error('Number of types are not matching the values')\r\n  }\r\n\r\n  var ret = []\r\n\r\n  for (var i = 0; i < types.length; i++) {\r\n    var type = elementaryName(types[i])\r\n    var value = values[i]\r\n    ret.push(ABI.solidityHexValue(type, value, null))\r\n  }\r\n\r\n  return Buffer.concat(ret)\r\n}\r\n\r\nABI.soliditySHA3 = function (types, values) {\r\n  return utils.keccak256(ABI.solidityPack(types, values))\r\n}\r\n\r\nABI.soliditySHA256 = function (types, values) {\r\n  return utils.sha256(ABI.solidityPack(types, values))\r\n}\r\n\r\nABI.solidityRIPEMD160 = function (types, values) {\r\n  return utils.ripemd160(ABI.solidityPack(types, values), true)\r\n}\r\n\r\n// Serpent's users are familiar with this encoding\r\n// - s: string\r\n// - b: bytes\r\n// - b<N>: bytes<N>\r\n// - i: int256\r\n// - a: int256[]\r\n\r\nfunction isNumeric (c) {\r\n  // FIXME: is this correct? Seems to work\r\n  return (c >= '0') && (c <= '9')\r\n}\r\n\r\n// For a \"documentation\" refer to https://github.com/ethereum/serpent/blob/develop/preprocess.cpp\r\nABI.fromSerpent = function (sig) {\r\n  var ret = []\r\n  for (var i = 0; i < sig.length; i++) {\r\n    var type = sig[i]\r\n    if (type === 's') {\r\n      ret.push('bytes')\r\n    } else if (type === 'b') {\r\n      var tmp = 'bytes'\r\n      var j = i + 1\r\n      while ((j < sig.length) && isNumeric(sig[j])) {\r\n        tmp += sig[j] - '0'\r\n        j++\r\n      }\r\n      i = j - 1\r\n      ret.push(tmp)\r\n    } else if (type === 'i') {\r\n      ret.push('int256')\r\n    } else if (type === 'a') {\r\n      ret.push('int256[]')\r\n    } else {\r\n      throw new Error('Unsupported or invalid type: ' + type)\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nABI.toSerpent = function (types) {\r\n  var ret = []\r\n  for (var i = 0; i < types.length; i++) {\r\n    var type = types[i]\r\n    if (type === 'bytes') {\r\n      ret.push('s')\r\n    } else if (type.startsWith('bytes')) {\r\n      ret.push('b' + parseTypeN(type))\r\n    } else if (type === 'int256') {\r\n      ret.push('i')\r\n    } else if (type === 'int256[]') {\r\n      ret.push('a')\r\n    } else {\r\n      throw new Error('Unsupported or invalid type: ' + type)\r\n    }\r\n  }\r\n  return ret.join('')\r\n}\r\n\r\nmodule.exports = ABI\r\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}